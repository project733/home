{"version":3,"file":"static/css/main.7f47aee2.css","mappings":"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","sources":["css/global.scss","css/utilities/_mixins.scss","../node_modules/sass-mq/_mq.scss","components/ProjectsList/ProjectsList.module.scss","css/utilities/_typography.scss","css/utilities/_reset.scss","App.module.scss","css/utilities/_colors.scss"],"sourcesContent":["@import \"utilities/index\";\n\n.visuallyhidden {\n  @include visually-hidden;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\n.noscrollbar {\n  @include mq($from: desktop) {\n    @include hide-scrollbars;\n  }\n}\n","@mixin visually-hidden {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n@mixin font-size($pixel-value) {\n    $base: 16;\n    font-size: calc($pixel-value / $base) + rem;\n}\n\n@mixin text-format($family, $weight, $pixel-value, $color, $line-height: 1) {\n    font-family: $family;\n    font-weight: $weight;\n    @include font-size($pixel-value);\n    color: $color;\n    line-height: $line-height;\n}\n\n@mixin truncate-text {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n// Flexbox\n@mixin flexbox($direction: row, $justify: flex-start, $align: flex-start) {\n    display: flex;\n    flex-direction: $direction;\n    justify-content: $justify;\n    align-items: $align;\n}\n\n// Hide scrollbars but keep functionality\n@mixin hide-scrollbars {\n    scrollbar-width: none; /* Firefox */\n\n    &::-webkit-scrollbar {\n        display: none;\n    }\n}\n\n// Box shadow\n@mixin box-shadow($x: 1px, $y: 1px, $blur: 3px, $spread: 2px, $opacity: 0.3) {\n    box-shadow: $x $y $blur $spread rgba(0, 0, 0, $opacity);\n}\n\n// Slide up background\n@mixin slide-background($start: #333, $finish: #333) {\n    background: linear-gradient(to bottom, $start 50%, $finish 50%);\n}\n\n// Text border\n@mixin text-border($color) {\n    text-shadow: -1px 1px 0 $color, 1px 1px 0 $color, 1px -1px $color, -1px -1px 0 $color;\n}","@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px,\n) !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));\n///\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// If you want to overried the media type, you can use this option.\n/// @example scss\n///   @use 'path/to/mq' with ($media-type: 'screen');\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(tablet)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  @use 'path/to/mq' as *;\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: '#{$media-query} and (min-width: #{$min-width})';\n  }\n  @if $max-width != 0 {\n    $media-query: '#{$media-query} and (max-width: #{$max-width})';\n  }\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == 'all' and $media-query != '') {\n    $media-type: '';\n    $media-query: str-slice(unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value,\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: (\n    $name: $width,\n  );\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints(\n  $show-breakpoints: $show-breakpoints,\n  $breakpoints: $breakpoints\n) {\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: '#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})';\n      }\n    }\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n","@import \"../../css/utilities/index\";\n\n$bgcolor-base: #333;\n$bgcolor-tile1: #ffb6a3;\n$bgcolor-tile2: #f5d1c3;\n$bgcolor-tile3: #f0bc68;\n$bgcolor-tile4: #aab8bb;\n$bgcolor-tile5: #c4d7d1;\n$bgcolor-tile6: #f6d97c;\n$button-background: rgba(255, 255, 255, 0.8);\n$border-color: #333;\n$border-img: 1px solid #bebebe;\n$font-color: #333;\n$padding: 20px;\n\n.visuallyhidden {\n  @include visually-hidden;\n}\n\n.projects {\n  flex-grow: 1;\n  @include flexbox(column, flex-start, flex-start);\n  list-style-type: none;\n  position: relative;\n  width: 100%;\n\n  > li {\n    background-size: 100% 200%;\n    color: $font-color;\n    cursor: pointer;\n    font-weight: $font-weight-regular;\n    position: relative;\n    width: 100%;\n\n    .tile {\n      padding: calc($padding * 2);\n      overflow: hidden;\n\n      &:after {\n        background: $border-color;\n        content: '';\n        display: block;\n        height: 10px;\n        width: 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        transition: width 0.2s linear;\n      }\n    }\n\n    &:hover,\n    &:focus {\n      z-index: 1;\n\n      .tile:after {\n        width: 100%;\n      }\n    }\n\n    h3 {\n      background: rgba(255, 255, 255, 0.5);\n      font-size: 5vw;\n      padding: $padding calc($padding*2);\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n    }\n\n    p {\n      line-height: 1.5rem;\n      padding-bottom: $padding;\n    }\n\n    ul {\n      list-style-type: disc;\n      margin-left: calc($padding);\n\n      li {\n        padding-bottom: calc($padding/5);\n      }\n    }\n\n    @include mq($from: tablet) {\n      h3 {\n        @include font-size(22);\n      }\n    }\n\n    @include mq($from: small-screen) {\n      .tile {\n        height: 100%;\n        width: 100%;\n        overflow: hidden;\n        position: relative;\n        bottom: 0;\n        top: auto;\n\n        animation-timing-function: linear;\n        animation-fill-mode: both;\n        animation-duration: 0.2s;\n        animation-name: fadeIn;\n\n        transition: fadeIn 0.5s ease-in-out;\n\n        &:after {\n          bottom: 0;\n          top: auto;\n        }\n      }\n\n      h3 {\n        background: none;\n      }\n    }\n  }\n\n  @include mq($from: small-screen) {\n    flex-direction: row;\n    flex-flow: row wrap;\n    height: 100%;\n    width: 70vw;\n\n    > li {\n      will-change: transform;\n\n      animation-timing-function: linear;\n      animation-fill-mode: both;\n      animation-duration: 0.2s;\n      animation-name: slideUp;\n\n      transition: slideUp 0.5s ease-in-out, openPopup 0.3s ease-in-out;\n      flex-grow: 1;\n      height: 50vh;\n      width: 33%;\n    }\n  }\n}\n\n.screenshots {\n  @include flexbox(row, flex-start, flex-start);\n  flex-wrap: wrap;\n\n  img {\n    border: $border-img;\n    @include box-shadow(3px, 4px, 4px, 1px, 0.1);\n  }\n\n  .img {\n    height: 0;\n    width: 0;\n    opacity: 0;\n\n    img {\n      height: auto;\n    }\n\n    &:first-child {\n      height: auto;\n      width: 100%;\n      opacity: 1;\n      text-align: right;\n\n      img {\n        height: 30vh;\n        width: auto;\n      }\n    }\n  }\n\n  @include mq($from: tablet) {\n    .img:first-child {\n      padding-left: 20vw;\n\n      img {\n        height: 40vh;\n      }\n    }\n  }\n\n  @include mq($from: small-screen) {\n    flex-direction: row;\n\n    .img:first-child {\n      padding-left: 0;\n\n      img {\n        height: 30vh;\n      }\n    }\n  }\n}\n\n:global {\n  .details {\n    height: 0;\n    opacity: 0;\n  }\n\n  .projectTile {\n    &1 {\n      background: $bgcolor-tile1;\n\n      @include mq($from: small-screen) {\n        @include slide-background($bgcolor-base, $bgcolor-tile1);\n        @include text-border($bgcolor-tile1);\n      }\n    }\n\n    &2 {\n      background: $bgcolor-tile2;\n\n      @include mq($from: small-screen) {\n        @include slide-background($bgcolor-base, $bgcolor-tile2);\n        @include text-border($bgcolor-tile2);\n      }\n    }\n\n    &3 {\n      background: $bgcolor-tile3;\n\n      @include mq($from: small-screen) {\n        @include slide-background($bgcolor-base, $bgcolor-tile3);\n        @include text-border($bgcolor-tile3);\n      }\n    }\n\n    &4 {\n      background: $bgcolor-tile4;\n\n      @include mq($from: small-screen) {\n        @include slide-background($bgcolor-base, $bgcolor-tile4);\n        @include text-border($bgcolor-tile4);\n      }\n\n    }\n\n    &5 {\n      background: $bgcolor-tile5;\n\n      @include mq($from: small-screen) {\n        @include slide-background($bgcolor-base, $bgcolor-tile5);\n        @include text-border($bgcolor-tile5);\n      }\n    }\n\n    &6 {\n      background: $bgcolor-tile6;\n\n      @include mq($from: small-screen) {\n        @include slide-background($bgcolor-base, $bgcolor-tile6);\n        @include text-border($bgcolor-tile6);\n      }\n    }\n  }\n\n  li .closedetails {\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    display: none;\n    font-size: 0;\n    padding: calc($padding * 2);\n    position: absolute;\n    right: 0;\n    top: 0;\n    z-index: -1;\n\n    &:before,\n    &:after {\n      content: \"\";\n      display: block;\n      margin-top: -4px;\n      width: calc($padding * 2);\n      height: 4px;\n      background: #000;\n      border-radius: 1px;\n    }\n\n    &:before {\n      -webkit-transform: rotate(-45deg);\n      -ms-transform: rotate(-45deg);\n      transform: rotate(-45deg);\n    }\n\n    &:after {\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n    }\n  }\n\n  li.closed {\n    height: 100%;\n    display: none;\n\n    @include mq($from: small-screen) {\n      display: list-item;\n    }\n  }\n\n  li.open {\n    cursor: default;\n    height: 100%;\n    width: 100%;\n    position: relative;\n    top: 0;\n    left: 0;\n    z-index: 2;\n\n    transition: width 0.2s ease;\n\n    h3 {\n      background: none;\n      padding: 0 0 $padding 0;\n      position: static;\n    }\n\n    .details {\n      height: auto;\n      opacity: 1;\n    }\n\n    :local {\n      .tile {\n        @include flexbox(column, flex-start, flex-start);\n        flex-wrap: wrap;\n        overflow-y: auto;\n      }\n\n      .tile:after {\n        display: none;\n      }\n\n      .text {\n        padding-bottom: $padding;\n        width: 100%;\n      }\n\n      .screenshots {\n        padding-bottom: $padding;\n        gap: $padding;\n        width: 100%;\n\n        .img {\n          height: auto;\n          width: auto;\n          opacity: 1;\n\n          img {\n            height: 30vw;\n            max-width: 100%;\n          }\n        }\n\n        .img:first-child {\n          text-align: left;\n\n          img {\n            max-height: none;\n            width: auto;\n          }\n        }\n      }\n\n      @include mq($from: tablet) {\n        .screenshots {\n          .img:first-child {\n            padding-left: 0;\n          }\n        }\n      }\n\n      @include mq($from: small-screen) {\n        .tile {\n          flex-direction: row;\n        }\n\n        .text {\n          padding-right: $padding * 2;\n          width: 50%;\n        }\n\n        .screenshots {\n          flex-direction: row;\n          width: 50%;\n\n          .img img {\n            height: 20vw;\n          }\n        }\n      }\n    }\n\n    .closedetails {\n      display: block;\n      z-index: 3;\n    }\n\n    @include mq($from: small-screen) {\n      position: absolute;\n    }\n  }\n}\n\n@for $i from 1 through 6 {\n  .projects > li:nth-of-type(#{$i}) {\n    animation-delay: #{0.3 + calc(($i) / 4)}s;\n  }\n\n  .projects > li:nth-of-type(#{$i}) .tile {\n    animation-delay: #{1.8 + calc(($i) / 4)}s;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes slideUp {\n  0% {\n    background-position: 0% 0%;\n  }\n\n  100% {\n    background-position: 0% 100%;\n  }\n}","@import url(\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Raleway&family=Roboto+Condensed:wght@300;400;700&display=swap\");\n\n$font-family-monserrat: \"Monserrat\", sans-serif;\n$font-family-raleway: \"Raleway\", sans-serif;\n$font-family-robotocondensed: \"Roboto Condensed\", sans-serif;\n\n$font-weight-thin: 300;\n$font-weight-regular: 400;\n$font-weight-bold: 700;\n","/* \nhtml5doctor.com Reset Stylesheet\nv1.6.1\nLast Updated: 2010-09-17\nAuthor: Richard Clark - http://richclarkdesign.com \nTwitter: @rich_clark\n*/\n\nhtml,\nbody,\ndiv,\nspan,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\nabbr,\naddress,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\nsamp,\nsmall,\nstrong,\nsub,\nsup,\nvar,\nb,\ni,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  background: transparent;\n}\n\nbody {\n  line-height: 1;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nnav {\n  ul {\n    list-style: none;\n  }\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote,\nq {\n  &:before,\n  &:after {\n    content: \"\";\n    content: none;\n  }\n}\n\na {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n  background: transparent;\n}\n\n/* change colours to suit your needs */\nins {\n  background-color: #ff9;\n  color: #000;\n  text-decoration: none;\n}\n\n/* change colours to suit your needs */\nmark {\n  background-color: #ff9;\n  color: #000;\n  font-style: italic;\n  font-weight: bold;\n}\n\ndel {\n  text-decoration: line-through;\n}\n\nabbr,\ndfn {\n  &[title] {\n    border-bottom: 1px dotted;\n    cursor: help;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/* change border colour to suit your needs */\nhr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #cccccc;\n  margin: 1em 0;\n  padding: 0;\n}\n\ninput,\nselect {\n  vertical-align: middle;\n}\n\n/*** box sizing border-box for all elements ***/\n*,\n*::before,\n*:after {\n  box-sizing: border-box;\n}\n","@import \"css/utilities/index\";\n\n$body-color: #333;\n$body1: #a09b94;\n$body2: #776d5a;\n$body3: #453f3c;\n$body4: #a3b9c9;\n$hilite: #ffbb00;\n$hilite2: #ffa600;\n$footer: #4f5d75;\n$padding: 20px;\n$arrow: 50px;\n\nbody {\n  background: $body-color;\n  @include text-format($font-family-robotocondensed,\n    $font-weight-regular,\n    18,\n    $font-color );\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\na {\n  color: $body-color;\n}\n\n.container {\n  @include flexbox(column, normal, normal);\n  width: 100%;\n\n  @include mq($from: small-screen) {\n    flex-direction: row;\n  }\n\n  @include mq($from: desktop) {\n    @include hide-scrollbars;\n  }\n}\n\nheader {\n  background: linear-gradient(75deg, $body1, $body2, $body3, $body4);\n  background-size: 400% 400%;\n  flex-grow: 1;\n  height: auto;\n  width: 100%;\n  opacity: 0;\n  overflow: hidden;\n  padding: $padding;\n  position: relative;\n  text-align: center;\n\n  animation: fadeIn 0.7s ease-in-out forwards, gradient 23s ease infinite;\n\n  h1 {\n    font-size: 20vw;\n    font-weight: normal;\n    padding-bottom: calc($padding * 2);\n\n    @include mq($from: tablet) {\n      @include font-size(96);\n      padding-bottom: calc($padding * 3);\n    }\n\n    @include mq($from: small-screen) {\n      font-size: 7vw;\n    }\n\n    @include mq($from: wide2) {\n      @include font-size(96);\n    }\n  }\n\n  h2,\n  p {\n    font-size: 15vw;\n    font-weight: normal;\n    padding-bottom: calc($padding * 2);\n  }\n\n  h2 {\n    @include mq($from: tablet) {\n      @include font-size(64);\n    }\n\n    @include mq($from: small-screen) {\n      font-size: 4vw;\n    }\n\n    @include mq($from: wide2) {\n      @include font-size(64);\n    }\n  }\n\n  .myname {\n    color: $hilite;\n    text-transform: uppercase;\n  }\n\n  .myskills {\n    color: $hilite2;\n  }\n\n  .mywork {\n    font-size: 8vw;\n    padding: $padding $padding calc($padding * 3);\n    position: relative;\n    text-align: center;\n\n    &:after {\n      content: \"\";\n      display: block;\n      border-top: calc($padding / 4) solid $font-color;\n      border-right: calc($padding / 4) solid $font-color;\n      height: calc($arrow - $padding);\n      width: calc($arrow - $padding);\n      position: absolute;\n      right: calc(50% - ($arrow - $padding));\n      bottom: $padding;\n      transform: translateX(-50%) rotate(135deg);\n    }\n\n    @include mq($from: tablet) {\n      @include font-size(48);\n\n      &:after {\n        border-top: calc($padding / 3) solid $font-color;\n        border-right: calc($padding / 3) solid $font-color;\n        height: calc($arrow - $padding);\n        width: calc($arrow - $padding);\n        bottom: $padding;\n      }\n    }\n\n    @include mq($from: small-screen) {\n      font-size: 3vw;\n      padding: $padding 6vw $padding $padding;\n      text-align: right;\n\n      &:after {\n        border-top: 0.5vw solid $font-color;\n        border-right: 0.5vw solid $font-color;\n        height: 2.6vw;\n        width: 2.6vw;\n        transform: translateY(-50%) rotate(45deg);\n        right: $padding;\n        top: 50%;\n      }\n    }\n\n    @include mq($from: wide2) {\n      @include font-size(48);\n      padding: $padding calc($padding * 4) $padding $padding;\n    }\n  }\n\n  @include mq($from: small-screen) {\n    height: 100vh;\n    width: 30vw;\n    text-align: left;\n    overflow-y: auto;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n\n  50% {\n    background-position: 100% 50%;\n  }\n\n  100% {\n    background-position: 0% 50%;\n  }\n}","$body-color: #000;\n\n$font-color: #ededed;"],"names":[],"sourceRoot":""}